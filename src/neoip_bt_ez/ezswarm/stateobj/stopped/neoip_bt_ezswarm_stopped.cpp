/*! \file
    \brief Class to handle the bt_ezswarm_stopped_t
    
\par Brief Description
\ref bt_ezswarm_stopped_t handle the bt_ezswarm_state_t::STOPPED for bt_ezswarm_t

*/

/* system include */
/* local include */
#include "neoip_bt_ezswarm_stopped.hpp"
#include "neoip_bt_ezswarm.hpp"
#include "neoip_bt_err.hpp"
#include "neoip_nipmem_alloc.hpp"
#include "neoip_log.hpp"

NEOIP_NAMESPACE_BEGIN

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//			ctor/dtor
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

/** \brief Constructor
 */
bt_ezswarm_stopped_t::bt_ezswarm_stopped_t()		throw()
{
	// zero some field
	bt_ezswarm	= NULL;
}

/** \brief Destructor
 */
bt_ezswarm_stopped_t::~bt_ezswarm_stopped_t()		throw()
{
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//			setup function
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

/** \brief Start the operation
 */
bt_err_t	bt_ezswarm_stopped_t::start(bt_ezswarm_t *bt_ezswarm)		throw()
{
	// copy the parameter
	this->bt_ezswarm	= bt_ezswarm;
	
	// return no error
	return bt_err_t::OK;
}

NEOIP_NAMESPACE_END





