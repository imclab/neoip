/*! \file
    \brief Definition of the \ref reachpeer_profile_t

*/


/* system include */
/* local include */
#include "neoip_reachpeer_profile.hpp"
#include "neoip_reachpeer.hpp"

NEOIP_NAMESPACE_BEGIN;

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//                              ctor/dtor
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

/** \brief Constructor
 */
reachpeer_profile_t::reachpeer_profile_t()	throw()
{
	// set the default parameter
	silent_delay_val	= reachpeer_t::SILENT_DELAY_DFL;
	unreach_delay_val	= reachpeer_t::UNREACH_DELAY_DFL;
	probe_period_val	= reachpeer_t::PROBE_PERIOD_DFL;
}

/** \brief Destructor
 */
reachpeer_profile_t::~reachpeer_profile_t()	throw()
{
}

//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	
//                     to_string() function
//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	

/** \brief Convert the object into a string
 */
std::string	reachpeer_profile_t::to_string()	const throw()
{
	std::ostringstream oss;
	oss << "silent_delay="	<< silent_delay_val;
	oss << " unreach_delay="<< unreach_delay_val;
	oss << " probe_period="	<< probe_period_val;
	return oss.str();
}

//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	
//                     check function
//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	

/** \brief Check the validity of the profile
 */
reachpeer_err_t	reachpeer_profile_t::check()	const throw()
{
	// TODO
	return reachpeer_err_t::OK;
}

NEOIP_NAMESPACE_END

