/*! \file
    \brief Centralize the pkttype 'namespace' for the nlay layer

*/


#ifndef __NEOIP_NLAY_PKTTYPE_HPP__ 
#define __NEOIP_NLAY_PKTTYPE_HPP__ 

#include <stdint.h>

// global definition of some constant in nlay for packet type
// - to have a unique namespace 
#define NEOIP_PKTTYPE_OFFSET_PKTCOMP			(0 + 0)
#	define NEOIP_PKTTYPE_PKTCOMP_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_DATAIZE		(NEOIP_PKTTYPE_OFFSET_PKTCOMP + NEOIP_PKTTYPE_PKTCOMP_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_DATAIZE_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_REACHPEER		(NEOIP_PKTTYPE_OFFSET_DATAIZE + NEOIP_PKTTYPE_DATAIZE_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_REACHPEER_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_PKTFRAG		(NEOIP_PKTTYPE_OFFSET_REACHPEER + NEOIP_PKTTYPE_REACHPEER_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_PKTFRAG_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_RDGRAM		(NEOIP_PKTTYPE_OFFSET_PKTFRAG + NEOIP_PKTTYPE_PKTFRAG_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_RDGRAM_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_SCNX		(NEOIP_PKTTYPE_OFFSET_RDGRAM + NEOIP_PKTTYPE_RDGRAM_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_SCNX_MAX_NB_PACKET	16
#define NEOIP_PKTTYPE_OFFSET_NLAY_CLOSURE	(NEOIP_PKTTYPE_OFFSET_SCNX + NEOIP_PKTTYPE_SCNX_MAX_NB_PACKET)
#	define NEOIP_PKTTYPE_NLAY_CLOSURE_MAX_NB_PACKET	16

typedef uint8_t	nlay_pkttype_t;

#endif // __NEOIP_NLAY_PKTTYPE_HPP__ 

