/*! \file
    \brief Centralize the pkttype 'namespace for the ntudp layer

*/


#ifndef __NEOIP_NTUDP_PKTTYPE_HPP__ 
#define __NEOIP_NTUDP_PKTTYPE_HPP__ 

#include <stdint.h>

// global definition of some constant in ntudp for packet type
// - to have a unique namespace 
#define NEOIP_NTUDP_PKTTYPE_NTUDP_NPOS_OFFSET		(0 + 0)
#define NEOIP_NTUDP_PKTTYPE_NTUDP_NPOS_MAX_NB_PACKET	16
#define NEOIP_NTUDP_PKTTYPE_RELUDP_OFFSET		(NEOIP_NTUDP_PKTTYPE_NTUDP_NPOS_OFFSET + NEOIP_NTUDP_PKTTYPE_NTUDP_NPOS_MAX_NB_PACKET)
#define NEOIP_NTUDP_PKTTYPE_RELUDP_MAX_NB_PACKET	16
#define NEOIP_NTUDP_PKTTYPE_KAD_OFFSET			(NEOIP_NTUDP_PKTTYPE_RELUDP_OFFSET + NEOIP_NTUDP_PKTTYPE_RELUDP_MAX_NB_PACKET)
#define NEOIP_NTUDP_PKTTYPE_KAD_MAX_NB_PACKET		16
#define NEOIP_NTUDP_PKTTYPE_TUNL_OFFSET			(NEOIP_NTUDP_PKTTYPE_KAD_OFFSET + NEOIP_NTUDP_PKTTYPE_KAD_MAX_NB_PACKET)
#define NEOIP_NTUDP_PKTTYPE_TUNL_MAX_NB_PACKET		16
#define NEOIP_NTUDP_PKTTYPE_SOCK_OFFSET			(NEOIP_NTUDP_PKTTYPE_TUNL_OFFSET + NEOIP_NTUDP_PKTTYPE_TUNL_MAX_NB_PACKET)
#define NEOIP_NTUDP_PKTTYPE_SOCK_MAX_NB_PACKET		16

typedef uint8_t	ntudp_pkttype_t;	//!< the type used to store the packet type in ntudp

#endif // __NEOIP_NTUDP_PKTTYPE_HPP__ 

