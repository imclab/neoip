/*! \file
    \brief Definition of the \ref tcp_full_profile_t

*/


/* system include */
/* local include */
#include "neoip_tcp_full_profile.hpp"
#include "neoip_tcp_full.hpp"

NEOIP_NAMESPACE_BEGIN;

// definition of \ref tcp_full_profile_t constant
const size_t	tcp_full_profile_t::RCVDATA_MAXLEN	= 64*1024;
const size_t	tcp_full_profile_t::XMITBUF_MAXLEN	= tcp_full_t::UNLIMITED_VAL;
const size_t	tcp_full_profile_t::MAYSEND_TSHOLD	= tcp_full_t::UNLIMITED_VAL;

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//                              ctor/dtor
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

/** \brief Constructor
 */
tcp_full_profile_t::tcp_full_profile_t()	throw()
{
	rcvdata_maxlen	(RCVDATA_MAXLEN);
	xmitbuf_maxlen	(XMITBUF_MAXLEN);
	maysend_tshold	(MAYSEND_TSHOLD);
}

//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	
//                     check function
//////////////////////////////////////////////////////////////////////////////	
//////////////////////////////////////////////////////////////////////////////	

/** \brief Check the validity of the profile
 */
inet_err_t	tcp_full_profile_t::check()	const throw()
{
	// return no error
	return inet_err_t::OK;
}

NEOIP_NAMESPACE_END

