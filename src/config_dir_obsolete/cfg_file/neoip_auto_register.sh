#!/bin/sh
# This script do the following
# - determine the application name and location
#   o it is equal to`basename $0`, so this script is assumed to be rename appropriatly
# - check if an identity is registered
#   o if not, try to register every 3-sec until it succeed
# - launch the application /usr/lib/$RADIX_NAME/$RADIX_NAME-bin
RADIX_NAME=`basename $0`
CONFIG_DIR=/etc/$RADIX_NAME
CONFIG_FILE=$CONFIG_DIR/config.ini
RETRY_PERIOD=3
EXE_FILE=/usr/lib/$RADIX_NAME/$RADIX_NAME-bin
CUR_PEERNAME=`cat $CONFIG_DIR/peername.neoip 2>/dev/null`
if [ -z "$CUR_PEERNAME" ]; then
#   loop until the registration of the autogenerated node
	while true; do
		AUTO_NAME=autogenerated-`dd if=/dev/urandom bs=1 count=16 2>/dev/null | od -x | head -1 | cut -d " " -f 2- | tr -d " "`
		echo autogenerated name is $AUTO_NAME
		FULL_NAME=$AUTO_NAME.4afree.net
		$EXE_FILE --register $FULL_NAME
		REGISTRATION_ERR_CODE=$?
		# if error code showed the user explicitly stopped the registration do done retry
		if [ "$REGISTRATION_ERR_CODE" == "99" ]; then
			echo "registration stopped by user. do not retry"
			exit -1;
		fi
		# test the registration error code
		if [ "$REGISTRATION_ERR_CODE" != "0" ]; then
			echo "Registration of $FULL_NAME failed."
			echo "trying again with another name in $RETRY_PERIOD second"
			sleep $RETRY_PERIOD
			continue;
		fi
		# test if the private key is present
		FNAME=$CONFIG_DIR/$FULL_NAME.privkey.pem
		if [ ! -r "$FNAME" ]; then
			echo "Registration PANIC!!! returned sucess but private key file $FNAME isnt present!"
			echo "trying again with another name in $RETRY_PERIOD second"
			sleep $RETRY_PERIOD
			continue;
		fi
		# test if the certificate is present
		FNAME=$CONFIG_DIR/$FULL_NAME.cert.pem
		if [ ! -r $FNAME ]; then
			echo "Registration PANICED!!! return suceess error code but certificate file $FNAME isnt present!"
			echo "trying again with another name in $RETRY_PERIOD second"
			sleep $RETRY_PERIOD
			continue;
		fi
		break
	done
	echo "registered autogenerate name $FULL_NAME. launching the programe"
fi
CUR_PEERNAME=`cat $CONFIG_DIR/peername.neoip 2>/dev/null`
# test if the private key is present
FNAME=$CONFIG_DIR/$CUR_PEERNAME.privkey.pem
if [ ! -r "$FNAME" ]; then
	echo "error: The current peername is $CUR_PEERNAME but can't find its private key in $FNAME !"
	exit 1
fi
# test if the certificate is present
FNAME=$CONFIG_DIR/$CUR_PEERNAME.cert.pem
if [ ! -r "$FNAME" ]; then
	echo "error: The current peername is $CUR_PEERNAME but can't find its certificate in $FNAME !"
	exit 1
fi
# test if the certificate is present
FNAME=$CONFIG_DIR/root_ca_cert.pem
if [ ! -r "$FNAME" ]; then
	echo "error: can't find its root CA certificate in $FNAME !"
	exit 1
fi
#
# 
# if all is ok, launch the apps
$EXE_FILE $*
